spring.main.banner-mode=on

# MySQL
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/notenew?serverTimezone=Europe/Moscow&verifyServerCertificate=false&useSSL=true&characterEncoding=UTF-8
#spring.datasource.username=${nameDB}
#spring.datasource.password=${passwordDB}


#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

##----------------------------------------
## Настройки для Oracle РАБОТАЮТ!!!:
#jdbc.driverClassName = oracle.jdbc.driver.OracleDriver
#jdbc.url=jdbc:oracle:thin:@//localhost:1521/oracledb?serverTimezone=Europe/Moscow&verifyServerCertificate=false&useSSL=true&characterEncoding=UTF-8
#jdbc.username = tantandb
#jdbc.password = root
#hibernate.show_sql = false
#hibernate.hbm2ddl.auto = create
##A dialect specifically for use with Oracle 10g.
##hibernate.dialect = org.hibernate.dialect.Oracle10gDialect
#hibernate.dialect = org.hibernate.dialect.Oracle12cDialect
#hibernate.format_sql = true
##----------------------------------------
# Настройки для PostgreSQL NB Lenovo:
#jdbc.driverClassName = org.postgresql.Driver
#jdbc.driverClassName = org.postgresql.jdbc4.Jdbc4Connection
#jdbc.url = jdbc:postgresql://localhost:5432/postgres?currentSchema=public
#jdbc.url = jdbc:postgresql://localhost/postgres?currentSchema=public
#jdbc.url = jdbc:postgresql://localhost:5432/postgres
#jdbc.username = postgres
#jdbc.password = Kolbasa2489
#hibernate.show_sql = true
#hibernate.hbm2ddl.auto = create
#hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#hibernate.format_sql = true

##----------------------------------------

# Настройки для MySQL:
jdbc.driverClassName = com.mysql.cj.jdbc.Driver
jdbc.url = jdbc:mysql://localhost:3306/tantandb?serverTimezone=Europe/Moscow&verifyServerCertificate=false&useSSL=true&characterEncoding=UTF-8
jdbc.username = root
jdbc.password = root
hibernate.show_sql = false
hibernate.hbm2ddl.auto = create-drop
hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
hibernate.format_sql = true

#jdbc.username = ${nameDB}
#jdbc.password = ${passwordDB}
# ---
#hibernate.jdbc.batch_size 20

# Пакетная запись в БД. Используется в тесте SessionTest.manyPacketSaveTest()
# Ещё в Entity у @Id @GeneratedValue(strategy = GenerationType.AUTO) а не не IDENTITY !!!
# В конфиг добавил: properties.put("hibernate.jdbc.batch_size", environment.getRequiredProperty("hibernate.jdbc.batch_size"));
# Число 10 похоже ролли не играет - лишь бы было
hibernate.jdbc.batch_size = 10

# ===============================
# = JPA / HIBERNATE
# ===============================
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS

#spring.main.allow-bean-definition-overriding=true

#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
#logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql=trace
#logging.level.sql=error

# Из старого, может пригодится @SpringBootApplication -1-№
#welcome.message: Injected Message!
#logging.level.ru.glushko = info
#logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
##Создаст файл app777.log по указанному пути:
#logging.file=${java.io.tmpdir}/app777.log
##Работает!!!
##C:\Users\favoronec\AppData\Local\Temp\app777.log
##Создаст файл app88.log по указанному пути:
#logging.file = /Users/favoronec/app88.log
##Работает!!!
##E:\Users\favoronec\app88.log
##Создаст файл app9.log по указанному пути:
#logging.file = target/app9.log
##Работает!!!
##[application.properties] E:\YandexDisk\Java\TestWeb\TW57\target\app9.log

## Из старого, может пригодится -2-№
##spring.jpa.hibernate.ddl-auto = validate
##spring.datasource.url = jdbc:mysql://localhost:3306/living?serverTimezone=Europe/Moscow&verifyServerCertificate=false&useSSL=true&characterEncoding = UTF-8
##spring.datasource.username = admin
##spring.datasource.password = admin
##spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57Dialect
# -= Это должно работать в SpringBoot =-
#server.port = 7070
#spring.jpa.hibernate.ddl-auto = validate
#spring.datasource.url = jdbc:postgresql://localhost:5432/postgres?currentSchema=public
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.username = postgres
#spring.datasource.password = 12345









